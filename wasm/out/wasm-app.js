var i=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this.active=!1,this.paused=!1,this.shadowRoot.innerHTML=`
        <label>
            <meter optimum=0 low=500 high=1000 value=0 max=1500></meter>
            <span id="label-text"></span>
        </label>
        `,this.labelText=this.shadowRoot.querySelector("#label-text"),this.meter=this.shadowRoot.querySelector("meter"),this.step=this.step.bind(this)}start(){this.paused?this.paused=!1:this.startTime=performance.now(),this.active=!0,requestAnimationFrame(this.step)}pause(){this.paused=!0}step(){if(this.active&&!this.paused){let t=performance.now()-this.startTime;this.setLabel(`${t.toFixed(2)}ms`),this.meter.value=t,requestAnimationFrame(this.step)}}stop(){this.active=!1}setLabel(t){this.labelText.innerText=t}},w=i;customElements.define("rtw-timer",i);var n=document.querySelector("button"),s=document.querySelector("canvas"),c=document.querySelector("#timers"),a;s.width=3*100;s.height=3*66;var o=s.getContext("2d"),l=new URL(`${import.meta.url}/../wasm-worker.js`),r=new Worker(l.href,{type:"module"});r.postMessage("init");r.addEventListener("message",async e=>{if(e.data.status==="success")e.data.data.imageData?d(e.data.data.imageData):e.data.data.initialized&&(n.disabled=!1);else if(e.data.status==="error"){a.pause(),a.setLabel("Web Worker failed, running on the main thread...");let{wasmRender:t}=await import("./wasm-render.js");d(await t()),a.start(),a.step()}a&&a.stop()});function u(){a=m(),h(),a.start(),r.postMessage("render")}function m(){let e=document.createElement("rtw-timer"),t=document.createElement("li");return t.appendChild(e),c.prepend(t),e}function d(e){console.time("drawing canvas"),o.putImageData(e,0,0),console.timeEnd("drawing canvas")}function h(){o.clearRect(0,0,s.width,s.height)}n.addEventListener("click",u);
