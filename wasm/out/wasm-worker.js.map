{
  "version": 3,
  "sources": ["../wasm-worker.js"],
  "sourcesContent": ["// try importing wasm-render.  if the import fails, it probably indicates a\n// browser that doesn't support module imports from web workers, like Firefox,\n// so report an error back to the main thread, which will respond by running\n// the rendering on the main thread.\n\nlet wasmRender;\nlet initialized = false;\n\nconsole.log(\"wasm-worker module\");\n\naddEventListener('message', async e => {\n\n    if (e.data === 'init') {\n        try {\n            const module = await import(\"./wasm-render.js\");\n            wasmRender = module.wasmRender;\n            await module.wasmInit();\n            initialized = true;\n            postMessage({status: \"success\", data: {initialized}});\n        } catch (e) {\n            console.error(e);\n            postMessage({status: \"error\", data: {type: \"import\"}, message: \"error occurred during web worker import\"});\n        }\n    } else if (e.data === 'render') {\n        try {\n            const imageData = await wasmRender();\n            postMessage({status: \"success\", data: {initialized, imageData}});\n        } catch (error) {\n            console.error(error);\n            postMessage({status: \"error\", data: {type: \"render\", error}, message: \"error occurred during render\"});\n        }\n    }\n});\n\n// // import wasmRender from \"./wasm-render.js\";\n\n// try {\n//     console.log('importing');\n//     import(\"./wasm-render.js\").then(({wasmRender}) => {\n//         console.log('imported');\n//         addEventListener('message', () => {\n//             postMessage({status: \"success\", data: await wasmRender()});\n//         });\n//     });\n// } catch (e) {\n//     postMessage({status: \"error\", message: \"error occurred during import or render\"});\n// }\n"],
  "mappings": ";AAKA,IAAI;AACJ,IAAI,cAAc;AAElB,QAAQ,IAAI;AAEZ,iBAAiB,WAAW,OAAM,MAAK;AAEnC,MAAI,EAAE,SAAS,QAAQ;AACnB,QAAI;AACA,YAAM,SAAS,MAAM,OAAO;AAC5B,mBAAa,OAAO;AACpB,YAAM,OAAO;AACb,oBAAc;AACd,kBAAY,EAAC,QAAQ,WAAW,MAAM,EAAC;AAAA,aAClC,IAAP;AACE,cAAQ,MAAM;AACd,kBAAY,EAAC,QAAQ,SAAS,MAAM,EAAC,MAAM,YAAW,SAAS;AAAA;AAAA,aAE5D,EAAE,SAAS,UAAU;AAC5B,QAAI;AACA,YAAM,YAAY,MAAM;AACxB,kBAAY,EAAC,QAAQ,WAAW,MAAM,EAAC,aAAa;AAAA,aAC/C,OAAP;AACE,cAAQ,MAAM;AACd,kBAAY,EAAC,QAAQ,SAAS,MAAM,EAAC,MAAM,UAAU,SAAQ,SAAS;AAAA;AAAA;AAAA;",
  "names": []
}
